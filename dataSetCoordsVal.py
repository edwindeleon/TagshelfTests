data = [
    [0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x04],
    [0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x00],
    [0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x04],
    [0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x08],
    [0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x0c],
    [0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x08],
    [0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x0c],
    [0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x00],
    [0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x04],
    [0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x00],
    [0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 0x04],
    [0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 0x08],
    [0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x0c],
    [0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x08],
    [0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 0x0c],
    [0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 0x10],
    [0x11, 0x10, 0x11, 0x12, 0x13, 0x12, 0x13, 0x10, 0x11, 0x10, 0x11, 0x12, 0x13, 0x12, 0x13, 0x14],
    [0x15, 0x14, 0x15, 0x16, 0x17, 0x16, 0x17, 0x14, 0x15, 0x14, 0x15, 0x16, 0x17, 0x16, 0x17, 0x10],
    [0x11, 0x10, 0x11, 0x12, 0x13, 0x12, 0x13, 0x10, 0x11, 0x10, 0x11, 0x12, 0x13, 0x12, 0x13, 0x14],
    [0x15, 0x14, 0x15, 0x16, 0x17, 0x16, 0x17, 0x14, 0x15, 0x14, 0x15, 0x16, 0x17, 0x16, 0x17, 0x18],
    [0x19, 0x18, 0x19, 0x1a, 0x1b, 0x1a, 0x1b, 0x18, 0x19, 0x18, 0x19, 0x1a, 0x1b, 0x1a, 0x1b, 0x1c],
    [0x1d, 0x1c, 0x1d, 0x1e, 0x1f, 0x1e, 0x1f, 0x1c, 0x1d, 0x1c, 0x1d, 0x1e, 0x1f, 0x1e, 0x1f, 0x18],
    [0x19, 0x18, 0x19, 0x1a, 0x1b, 0x1a, 0x1b, 0x18, 0x19, 0x18, 0x19, 0x1a, 0x1b, 0x1a, 0x1b, 0x1c],
    [0x1d, 0x1c, 0x1d, 0x1e, 0x1f, 0x1e, 0x1f, 0x1c, 0x1d, 0x1c, 0x1d, 0x1e, 0x1f, 0x1e, 0x1f, 0x00]
]


def get_value(row, col):
    try:
        return data[row][col]
    except IndexError:
        return None

# Prueba de la función con algunas coordenadas
value1 = get_value(0, 0)
print(hex(value1) if value1 is not None else "Coordenadas fuera de rango")  # Debería imprimir '0x01'

value2 = get_value(5, 5)
print(hex(value2) if value2 is not None else "Coordenadas fuera de rango")  # Debería imprimir '0x0e'

value3 = get_value(100, 100)
print(hex(value3) if value3 is not None else "Coordenadas fuera de rango")  # Debería imprimir 'Coordenadas fuera de rango'
